CC=@CC@
AR=@AR@
RANLIB=@RANLIB@

BINDIR=@exedir@
MANDIR=@mandir@
LIBDIR=@libdir@
INCDIR=@prefix@/include

PGMS=markdown mkd2html
MKDLIB=libmarkdown.a
OBJS=mkdio.o markdown.o dumptree.o generate.o docheader.o

all: $(PGMS)

install: $(PGMS)
	@INSTALL_PROGRAM@ $(PGMS) $(BINDIR)
	@INSTALL_DATA@ $(MKDLIB) $(LIBDIR)
	@INSTALL_DATA@ mkdio.h $(INCDIR)

install.man:
	@INSTALL_DIR@ $(MANDIR)/man3
	@INSTALL_DATA@ markdown.3 $(MANDIR)/man3
	for x in mkd_text mkd_in mkd_string; do \
	    ( echo '.\"' ; echo ".so man3/markdown.3" ) > $(MANDIR)/man3/$$x.3;\
	done
	@INSTALL_DIR@ $(MANDIR)/man7
	@INSTALL_DATA@ markdown.7 $(MANDIR)/man7
	@INSTALL_DIR@ $(MANDIR)/man1
	@INSTALL_DATA@ markdown.1 $(MANDIR)/man1

install.everything: install install.man

version.o: VERSION config.h
	echo 'char version[] = VERSION;' > version.c && \
	    $(CC) -DVERSION=\"`cat VERSION`\" -c version.c

markdown: main.o version.o $(MKDLIB)
	$(CC) -L. -o markdown main.o version.o -lmarkdown @LIBS@

# example program
mkd2html:  mkd2html.o version.o $(MKDLIB)
	$(CC) -L. -o mkd2html mkd2html.o version.o -lmarkdown @LIBS@

main.o: main.c mkdio.h config.h
	$(CC) -I. -c main.c

$(MKDLIB): $(OBJS)
	$(AR) crv $(MKDLIB) $(OBJS)
	$(RANLIB) $(MKDLIB)

test:	$(PGMS)
	@for x in tests/*.t; do \
	    sh $$x; \
	done
	
clean:
	rm -f $(PGMS) *.o $(MKDLIB)

distclean spotless: clean
	rm -f @GENERATED_FILES@ @CONFIGURE_FILES@

markdown.o: markdown.c config.h cstring.h markdown.h
generate.o: generate.c config.h cstring.h markdown.h
dumptree.o: dumptree.c cstring.h markdown.h
mkdio.o: mkdio.c mkdio.h cstring.h config.h
